name: Build and Release MSI

on:
  push:
    tags:
      - 'v*'  # Isso roda o pipeline quando uma tag com versão for criada, por exemplo, v1.0.0

jobs:
  build:
    runs-on: windows-latest  # O pipeline vai rodar em uma máquina Windows

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Baixa o código do seu repositório

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.x'  # Versão do .NET usada no seu projeto

    - name: Build project
      run: msbuild /t:Build /p:Configuration=Release /p:Platform="Any CPU"  # Compila o projeto

    - name: Build MSI
      run: msbuild /t:Build /p:Configuration=Release /p:Platform="Any CPU" YourSetupProject.vdproj  # Compila o setup.msi

    - name: Upload MSI to GitHub Releases
      uses: softprops/action-gh-release@v1
      with:
        files: path/to/your/setup.msi  # O caminho do arquivo .msi gerado
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Token para permissões do GitHub

    - name: Update version.json
      run: |
        new_version=${{ github.ref }}  # Pega a versão da tag
        echo "{ \"version\": \"$new_version\", \"url\": \"https://iagostormdev.github.io/britosystem/releases/$new_version/setup.msi\" }" > version.json
        - name: Commit updated version.json
          run: |
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git add version.json
            git commit -m "Update version.json for $new_version"
            git push
